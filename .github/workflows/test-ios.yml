name: Test iOS Plugin

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-ios:
    name: Build and Test iOS
    runs-on: macos-13
    
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install Cordova
        run: npm install -g cordova
      
      - name: Create test app
        run: cordova create testApp com.test.embeddedwebview TestApp
      
      - name: Add iOS platform
        working-directory: testApp
        run: cordova platform add ios
      
      - name: Install plugin
        working-directory: testApp
        run: |
          echo "üì¶ Installing plugin..."
          cordova plugin add https://github.com/${{ github.repository }}.git#${{ github.ref_name }}
          echo "‚úÖ Plugin installed"
          cordova plugin ls
      
      - name: Build iOS
        id: build
        working-directory: testApp
        run: |
          echo "üî® Building iOS..."
          
          cordova build ios > build.log 2>&1
          BUILD_EXIT=$?
          
          if [ $BUILD_EXIT -eq 0 ]; then
            echo "‚úÖ BUILD SUCCEEDED"
            tail -20 build.log
          else
            echo "‚ùå BUILD FAILED"
            echo ""
            echo "========== ERRORS =========="
            grep -i "error:" build.log || true
            echo ""
            echo "========== WARNINGS =========="
            grep -i "warning:" build.log | head -20 || true
            echo ""
            echo "========== LAST 50 LINES =========="
            tail -50 build.log
            exit 1
          fi
      
      - name: Show errors only
        if: failure()
        working-directory: testApp
        run: |
          echo "üîç Detailed error analysis:"
          echo ""
          
          if [ -f build.log ]; then
            echo "=== COMPILATION ERRORS ==="
            grep -A 3 "error:" build.log || echo "No compilation errors found"
            echo ""
            
            echo "=== CRITICAL WARNINGS ==="
            grep -A 2 "warning:" build.log | head -30 || echo "No warnings"
          fi
      
      - name: Upload full logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: testApp/build.log
          retention-days: 7